/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package scheep.UI;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import scheep.Board;
import scheep.Coordinates;
import scheep.Highscore;
import scheep.Highscores;

/**
 *
 * @author vforteli
 */
public class ScheepGUI extends javax.swing.JFrame
{
    /*
     * Lazy loaded scores
     */
    private Highscores Scores()
    {
        if (this.scores == null)
        {
            this.scores = new Highscores();
        }
        return this.scores;
    }           
    private Highscores scores = null;
    private Board board = null; 
    
    /**
     * Creates new form ScheepGUI
     */
    public ScheepGUI()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        HighScoresFrame = new javax.swing.JFrame();
        ResetHighScoresButton = new javax.swing.JButton();
        HighscoresTable = new javax.swing.JTable();
        NewScoreFrame = new javax.swing.JFrame();
        SaveScoreNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        SaveScoreButton = new javax.swing.JButton();
        BoardPanel = new javax.swing.JPanel();
        CoordinatesBox = new javax.swing.JTextField();
        FireButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        TurnsLabel = new javax.swing.JLabel();
        MainMenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        NewGameButton = new javax.swing.JMenuItem();
        ShowHighscoresButton = new javax.swing.JMenuItem();

        HighScoresFrame.setTitle("High scores");
        HighScoresFrame.setMinimumSize(new java.awt.Dimension(300, 200));
        HighScoresFrame.setName("HighscoresFrame"); // NOI18N

        ResetHighScoresButton.setText("Reset");
        ResetHighScoresButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ResetHighScoresButtonActionPerformed(evt);
            }
        });

        HighscoresTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String []
            {
                "Name", "Score", "Difficultyindex"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });

        javax.swing.GroupLayout HighScoresFrameLayout = new javax.swing.GroupLayout(HighScoresFrame.getContentPane());
        HighScoresFrame.getContentPane().setLayout(HighScoresFrameLayout);
        HighScoresFrameLayout.setHorizontalGroup(
            HighScoresFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HighScoresFrameLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ResetHighScoresButton))
            .addComponent(HighscoresTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
        );
        HighScoresFrameLayout.setVerticalGroup(
            HighScoresFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HighScoresFrameLayout.createSequentialGroup()
                .addComponent(HighscoresTable, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ResetHighScoresButton))
        );

        NewScoreFrame.setTitle("Save score");
        NewScoreFrame.setAlwaysOnTop(true);
        NewScoreFrame.setMinimumSize(new java.awt.Dimension(390, 120));
        NewScoreFrame.setResizable(false);

        jLabel2.setText("Enter name to be placed on the highscores list");

        SaveScoreButton.setText("Save");
        SaveScoreButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                SaveScoreButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NewScoreFrameLayout = new javax.swing.GroupLayout(NewScoreFrame.getContentPane());
        NewScoreFrame.getContentPane().setLayout(NewScoreFrameLayout);
        NewScoreFrameLayout.setHorizontalGroup(
            NewScoreFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewScoreFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NewScoreFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SaveScoreNameTextField)
                    .addGroup(NewScoreFrameLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 149, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewScoreFrameLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(SaveScoreButton)))
                .addContainerGap())
        );
        NewScoreFrameLayout.setVerticalGroup(
            NewScoreFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewScoreFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SaveScoreNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SaveScoreButton)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scheep");

        javax.swing.GroupLayout BoardPanelLayout = new javax.swing.GroupLayout(BoardPanel);
        BoardPanel.setLayout(BoardPanelLayout);
        BoardPanelLayout.setHorizontalGroup(
            BoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 488, Short.MAX_VALUE)
        );
        BoardPanelLayout.setVerticalGroup(
            BoardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );

        FireButton.setText("Fire!");
        FireButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                FireButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Turns:");

        TurnsLabel.setMaximumSize(new java.awt.Dimension(31, 14));
        TurnsLabel.setMinimumSize(new java.awt.Dimension(31, 14));
        TurnsLabel.setPreferredSize(new java.awt.Dimension(31, 14));

        jMenu1.setText("File");

        NewGameButton.setText("New game");
        NewGameButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                NewGameButtonActionPerformed(evt);
            }
        });
        jMenu1.add(NewGameButton);

        ShowHighscoresButton.setText("Highscores");
        ShowHighscoresButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ShowHighscoresButtonActionPerformed(evt);
            }
        });
        jMenu1.add(ShowHighscoresButton);

        MainMenuBar.add(jMenu1);

        setJMenuBar(MainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BoardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TurnsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CoordinatesBox, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FireButton)
                        .addGap(14, 14, 14))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BoardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CoordinatesBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FireButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(TurnsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /*
     * Start a new game
     */
    private void NewGameButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_NewGameButtonActionPerformed
    {//GEN-HEADEREND:event_NewGameButtonActionPerformed
        // If a game is already running prompt the user for confirmation
        if (board != null && board.getIsRunning())
        {
            int selection = JOptionPane.showConfirmDialog(
                                null
                        , "Do you want to discard the current game?"
                        , "New game"
                        , JOptionPane.OK_CANCEL_OPTION
                        , JOptionPane.WARNING_MESSAGE);
            
            if (selection != 0)
            {
                return;
            }
        }
        
        // Refactor?
        TurnsLabel.setText("0");
        board = new Board(10);
        try 
        {
            board.AddRandomShip(5);
            board.AddRandomShip(4);
            board.AddRandomShip(3);
            board.AddRandomShip(3);
            board.AddRandomShip(2);
        } 
        catch (Exception ex) 
        {
            Logger.getLogger(ScheepConsole.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        board.StartGame();
        
        DrawBoard(board.GetBoard());
    }//GEN-LAST:event_NewGameButtonActionPerformed

    
    
    private void DrawBoard(Board.cellstate[][] cells)
    { 
        BoardPanel.removeAll();
        BoardPanel.setLayout(new GridLayout(cells.length, cells.length));
        BoardPanel.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));

        int x = 0; 
        int y = 0;
        for (Board.cellstate[] row : cells)
        {
            for (Board.cellstate cell : row)
            {
                JPanel cellpanel = new JPanel();
                cellpanel.setEnabled(true);
                cellpanel.setName(new Coordinates(x, y).getHumanCoordinates());
                cellpanel.setPreferredSize(new Dimension(3, 3));
                cellpanel.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            
                cellpanel.addMouseListener(new MouseAdapter() 
                {
                    @Override
                    public void mousePressed(MouseEvent e) 
                    {  
                        JPanel cell =(JPanel)e.getSource();
                        Coordinates c = Coordinates.ParseCoordinates(cell.getName());

                        try
                        {
                            Fire(c);
                        } 
                        catch (Exception ex)
                        {
                            Logger.getLogger(ScheepGUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });
                
                if (cell == Board.cellstate.Ship)         
                {
                    cellpanel.setBackground(Color.blue);
                }
                else if (cell == Board.cellstate.Hit)         
                {
                    cellpanel.setBackground(Color.red);
                }
                else if (cell == Board.cellstate.Miss)         
                {
                    cellpanel.setBackground(Color.gray);
                }
                else if (cell == null)
                {
                    cellpanel.setBackground(Color.blue);
                }  
                
                BoardPanel.add(cellpanel);
                x++;
            }
            x = 0;
            y++;
        }
    }
    
    
       

    private void ShowHighscoresButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ShowHighscoresButtonActionPerformed
    {//GEN-HEADEREND:event_ShowHighscoresButtonActionPerformed
        ShowHighscores();
    }//GEN-LAST:event_ShowHighscoresButtonActionPerformed

    
    /*
     * Show the highscores popup
     */
    private void ShowHighscores()
    {
        PopulateHighscoresTable(this.Scores());
        HighScoresFrame.setVisible(true);        
    }
    
    
    private void ResetHighScoresButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ResetHighScoresButtonActionPerformed
    {//GEN-HEADEREND:event_ResetHighScoresButtonActionPerformed
        // Well, this button cannot be pressed unless the highscores have been loaded...
        this.Scores().ClearHighscores();
        try
        {
            this.Scores().Save();
        } 
        catch (IOException ex)
        {
            Logger.getLogger(ScheepGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Refresh the list to show the changes
        PopulateHighscoresTable(this.Scores());        
    }//GEN-LAST:event_ResetHighScoresButtonActionPerformed

    
    private void FireButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_FireButtonActionPerformed
    {//GEN-HEADEREND:event_FireButtonActionPerformed
        if (CoordinatesBox.getText() != null)
        {
            Coordinates c = Coordinates.ParseCoordinates((CoordinatesBox.getText()));
            Fire(c);
        } 
    }//GEN-LAST:event_FireButtonActionPerformed

    
    private void Fire(Coordinates c)
    {
        if (board != null && board.getIsRunning())
        {
            try
            {
                board.Fire(c.x, c.y);
               
                DrawBoard(board.GetBoard());

                TurnsLabel.setText(Integer.toString(board.getFireCount()));
                //GameCompleted();    // Debug
                if (board.getShipcells() == 0)
                {
                    GameCompleted();
                }
            } 
            catch (Exception ex)
            {
                // Notify the user? although, with a clickable GUI this should not be an issue anyway...
                Logger.getLogger(ScheepGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    
    
    private void SaveScoreButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_SaveScoreButtonActionPerformed
    {//GEN-HEADEREND:event_SaveScoreButtonActionPerformed
        Highscore h = new Highscore();
        h.Name = SaveScoreNameTextField.getText();
        h.Score = board.getScore();
        this.Scores().AddHighscore(h);
        try
        {
            this.Scores().Save();
        } 
        catch (IOException ex)
        {
            Logger.getLogger(ScheepGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        NewScoreFrame.dispose();
        SaveScoreNameTextField.setText(null);
        ShowHighscores();
    }//GEN-LAST:event_SaveScoreButtonActionPerformed

    
    /*
     * Called when a game is completed
     */
    private void GameCompleted()
    {
        NewScoreFrame.setVisible(true);
        
        //ResetGui();
    }    
    
    
    /*
     * Reset the gui to initial state
     */
    private void ResetGui()
    {
        board = null;
        TurnsLabel.setText(null);
        CoordinatesBox.setText(null);
        // Anything else to clear?
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(ScheepGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(ScheepGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(ScheepGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ScheepGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new ScheepGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BoardPanel;
    private javax.swing.JTextField CoordinatesBox;
    private javax.swing.JButton FireButton;
    private javax.swing.JFrame HighScoresFrame;
    private javax.swing.JTable HighscoresTable;
    private javax.swing.JMenuBar MainMenuBar;
    private javax.swing.JMenuItem NewGameButton;
    private javax.swing.JFrame NewScoreFrame;
    private javax.swing.JButton ResetHighScoresButton;
    private javax.swing.JButton SaveScoreButton;
    private javax.swing.JTextField SaveScoreNameTextField;
    private javax.swing.JMenuItem ShowHighscoresButton;
    private javax.swing.JLabel TurnsLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    // End of variables declaration//GEN-END:variables

    
    
    /**
     * Populate the high scores frame table with highscores
     */
    private void PopulateHighscoresTable(Highscores _scores)
    {
        HighscoresTable.removeAll(); 
        DefaultTableModel model = new javax.swing.table.DefaultTableModel(); 
        model.addColumn("Name");
        model.addColumn("Score");
        if (_scores != null)
        {
            for (Highscore s : _scores.getHighscores())
            {
                model.addRow(new Object[] { s.Name, s.Score}); 
                System.out.println(s.Name + ": " + s.Score);                
            }
        }
        HighscoresTable.setModel(model);
    }
}
